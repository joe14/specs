<?xml version="1.0" encoding="UTF-8"?>
<preface version="5.0" xml:id="foreword" 
	 xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Foreword</title>

  <para>The VSIPL++ Library provides C++ classes and functions for writing
  embedded signal processing applications designed to run on one or more
  processors. VSIPL++ contains</para>

  <itemizedlist>
    <listitem>
      <para>containers such as vectors, matrices, and tensors,</para>
    </listitem>

    <listitem>
      <para>mathematical operations such as addition and matrix multiplication
      on these containers,</para>
    </listitem>

    <listitem>
      <para>complex numbers and random numbers,</para>
    </listitem>

    <listitem>
      <para>linear algebra solvers such as LU decomposition, and</para>
    </listitem>

    <listitem>
      <para>signal processing classes and functions including fast Fourier
      transforms, convolutions, correlations, FIR filters, and IIR
      filters.</para>
    </listitem>
  </itemizedlist>

  <para>VSIPL++ extends the Vector, Signal, and Image Processing Library
  (VSIPL) standard, improving application performance, productivity, and
  portability. This C++ library supports improved performance through support
  for execution using multiple processors and through improved code
  optimization. The ability to write expressions using mathematical notation
  decreases program size, improving productivity. Because VSIPL++ has an open
  specification and is based on standard C++, VSIPL++ programs can be easily
  ported between architectures.</para>

  <para>The VSIPL++ specification has been split into two overlapping
  documents, covering uniprocessor execution and multi-processor execution.
  Uniprocessor execution is specified in this document, while distributed
  execution is specified in <olink targetdoc="vsiplxx-par"/>.</para>

  <para>This main specification document mainly contains declarations,
  definitions, and requirements for uniprocessor execution. Because VSIPL++
  supports both uniprocessor and distributed execution using the same
  programs, some aspects of distributed execution occur in this document. Some
  of these items and terms specified in the distributed specification that
  occasionally appear in this document include processor, subblock,
  distribution, and maps. For uniprocessor execution, these distributed
  aspects can be safely ignored since default arguments are provided by the
  library.</para>

  <para>The VSIPL++ parallel specification is significantly shorter than the
  uniprocessor specification because the library has been carefully designed
  to support running the same programs in either single or multiple processor
  modes. <olink targetdoc="vsiplxx-par"/> contains means to specify how a
  containerâ€™s contents are distributed among available processors.
  Mathematical operations and other operations need not be specified because
  the toolkit automatically ensures data is moved to where it is used.</para>

  <para>Please visit the <link xlink:href="http://www.hpec-si.org">High
  Performance Embedded Computing Software Initiative webpage</link> for more
  information on VSIPL++ and for reference implementations.</para>
</preface>
